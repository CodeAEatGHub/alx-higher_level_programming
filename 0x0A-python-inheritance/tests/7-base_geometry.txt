>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
area() is not implemented

Test present: check instantiation
>>> bg = BaseGeometry()

Test present: area()
>>> area()
area() is not implemented

Test present: integer_validator()
>>> integer_validator()
<name> must be greater than 0

Test present: integer_validator(“ age” )
>>>integer_validator(“  age”  )
 age must be greater than 0

Test present: integer_validator(“ age” , 1)
>>>integer_validator(“  age”  , 1)

Test present: integer_validator(“ age” , 0)
>>>integer_validator(“  age”  , 0)
 age must be greater than 0

Test present: integer_validator(“ age” , -4)
>>> integer_validator(“  age”  , -4)
 age must be greater than 0

Test present: integer_validator(“ age” , “ 4” )
>>> integer_validator(“  age”  , “  4”  )
 age must be an integer

Test present: integer_validator(“ age” , (4,))
>>> integer_validator(“  age”  , (4,))
 age must be an integer

Test present: integer_validator(“ age” , [3])
>>> integer_validator(“  age”  , [3])
 age must be an integer

Test present: integer_validator(“ age” , True)
>>> integer_validator(“  age”  , True)
 age must be an integer

Test present: integer_validator(“ age” , {3, 4})
>>> integer_validator(“  age”  , {3, 4})
 age must be an integer

Test present: integer_validator(“ age” , None)
>>> integer_validator(“  age”  , None)
 age must be an integerTest present: check instantiation
>>> bg = BaseGeometry()

Test present: area()
>>> area()
area() is not implemented

Test present: integer_validator()
>>> integer_validator()
<name> must be greater than 0

Test present: integer_validator(“ age” )
>>>integer_validator(“  age”  )
 age must be greater than 0

Test present: integer_validator(“ age” , 1)
>>>integer_validator(“  age”  , 1)

Test present: integer_validator(“ age” , 0)
>>>integer_validator(“  age”  , 0)
 age must be greater than 0

Test present: integer_validator(“ age” , -4)
>>> integer_validator(“  age”  , -4)
 age must be greater than 0

Test present: integer_validator(“ age” , “ 4” )
>>> integer_validator(“  age”  , “  4”  )
 age must be an integer

Test present: integer_validator(“ age” , (4,))
>>> integer_validator(“  age”  , (4,))
 age must be an integer

Test present: integer_validator(“ age” , [3])
>>> integer_validator(“  age”  , [3])
 age must be an integer

Test present: integer_validator(“ age” , True)
>>> integer_validator(“  age”  , True)
 age must be an integer

Test present: integer_validator(“ age” , {3, 4})
>>> integer_validator(“  age”  , {3, 4})
 age must be an integer

Test present: integer_validator(“ age” , None)
>>> integer_validator(“  age”  , None)
 age must be an integer
